// Code generated by MockGen. DO NOT EDIT.
// Source: src/project/repositories/surah_repository.go
//
// Generated by this command:
//
//	mockgen -source=src/project/repositories/surah_repository.go -package=repositories
//

// Package repositories is a generated GoMock package.
package repositories

import (
	reflect "reflect"
	models "ulil-albab-be/src/project/models"

	gomock "go.uber.org/mock/gomock"
)

// MockSurahRepo is a mock of SurahRepo interface.
type MockSurahRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSurahRepoMockRecorder
	isgomock struct{}
}

// MockSurahRepoMockRecorder is the mock recorder for MockSurahRepo.
type MockSurahRepoMockRecorder struct {
	mock *MockSurahRepo
}

// NewMockSurahRepo creates a new mock instance.
func NewMockSurahRepo(ctrl *gomock.Controller) *MockSurahRepo {
	mock := &MockSurahRepo{ctrl: ctrl}
	mock.recorder = &MockSurahRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSurahRepo) EXPECT() *MockSurahRepoMockRecorder {
	return m.recorder
}

// GetSurahList mocks base method.
func (m *MockSurahRepo) GetSurahList() ([]models.SurahResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSurahList")
	ret0, _ := ret[0].([]models.SurahResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSurahList indicates an expected call of GetSurahList.
func (mr *MockSurahRepoMockRecorder) GetSurahList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSurahList", reflect.TypeOf((*MockSurahRepo)(nil).GetSurahList))
}
